---
title: "Simpson's paradox"
date: "October 3, 2024"
title-slide-attributes:
    data-background-image: "figs/bikeshare-plots.png"
    data-background-size: contain
    data-background-opacity: "0.2"
format: 
  revealjs:
    theme: custom.scss
    transition: none
    incremental: true
    scrollable: true
editor: visual
editor_options: 
  chunk_output_type: console
draft: false
---

# Housekeeping

-   Homework 4 due this Saturday at 11:59pm

-   Content through today is fair game for Midterm 1

```{r echo = F}
knitr::opts_chunk$set(echo = F, warning = F, messabundance = F)
library(tidyverse)
library(readr)
plot_theme <- theme(text = element_text(size = 16))
set.seed(1)
admissions <- read_csv("data/ucb_admissions.csv") |>
  sample_frac()
```

# Brief recap

## Study design

-   What are the differences between observational studies and experimental studies?

-   What is a confounding variable?

## UC Berkeley admissions

Observational study on sex bias based on Fall 1973 admissions data to the graduate program at the University of California, Berkeley

|           | Admit | Deny | Total |
|-----------|-------|------|-------|
| **Men**   | 3738  | 4704 | 8442  |
| **Women** | 1494  | 2827 | 4321  |
| **Total** | 5232  | 7531 | 12763 |

::: discuss
1.  What is the probability of admission for a randomly selected applicant?

2.  What is the probability of admission among men? Among women?

3.  Are the probabilities you found marginal, joint, or conditional probabilities?
:::

:::: fragment
::: discuss
Suppose we want to understand the relationship between gender and admission decision. What sort of visualization might be appropriate for representing this data?
:::
::::

## UC Berkeley admissions (cont.)

::: fragment
```{r}
admissions |>
  ggplot(aes(x = Gender, fill = Decision)) +
  geom_bar(position = "fill") +
  ggtitle("Admission decisions by gender") +
  plot_theme
```
:::

# Case study

## Dive into data

We have more nuanced data about the graduate admissions: we know the department that each person was applied to.

We will consider the six largest departments: A, B, C, D, E, F

-   The first six observations in the data frame are as follows:

::: fragment
```{r echo = T}
head(admissions)
```
:::

-   ::: discuss
    What sort of EDA would be interesting/appropriate for these data?
    :::

## Frequency tables

Number of applicants by department:

::::: columns
::: {.column width="50%"}
Female applicants:

```{r}
admissions |>
  filter(Gender == "Female") |> 
  count(Dept) |>
  # pivot_wider(names_from = c(Gender, Decision), names_sep= ": ", values_from = n ) |>
  kableExtra::kable()

```
:::

::: {.column width="50%"}
Male applicants:

```{r}
admissions |>
  filter(Gender == "Male") |> 
  count(Dept) |>
  # pivot_wider(names_from = c(Gender, Decision), names_sep= ": ", values_from = n ) |>
  kableExtra::kable()

```
:::
:::::

## More-detailed frequency tables

Number of applicants by department and admission status:

::::: columns
::: {.column width="50%"}
Female applicants:

```{r}
admissions |>
  filter(Gender == "Female") |> 
  count(Dept, Decision) |>
  # pivot_wider(names_from = c(Gender, Decision), names_sep= ": ", values_from = n ) |>
  kableExtra::kable()|>
  kableExtra::kable_styling(font_size = 25)

```
:::

::: {.column width="50%"}
Male applicants:

```{r}
admissions |>
  filter(Gender == "Male") |> 
  count(Dept, Decision) |>
  kableExtra::kable()|>
  kableExtra::kable_styling(font_size = 25)

```
:::
:::::

## Visualize

```{r}
admissions |>
  ggplot(aes(x = Gender, fill = Decision)) +
  geom_bar(position = 'fill') +
  facet_wrap(~ Dept) +
  plot_theme
```

## Closer look

:::::: columns
::: {.column width="50%"}
```{r}
df1 <- admissions |> 
  count(Dept, Gender,name = "Total")

admissions |>
  count(Dept, Gender, Decision) |>
  group_by(Dept, Gender) |>
  mutate(prop = n / sum(n)) |>
  ungroup() |>
  filter(Decision == "Admit") |>
  rename("p_admit" = "prop")|>
  select(-n, -Decision) |>
  # right_join(df1) |>
  #pivot_wider(names_from = Gender, values_from = c(p_admit, Total),
  #            names_glue = "{Gender}_{.value}") |>
  kableExtra::kable(digits = 2)|>
  kableExtra::kable_styling(font_size = 25)
```
:::

:::: {.column width="50%"}
::: discuss
-   Are all departments uniform in admission rates?
-   Do admissions still seem biased against female applicants?
:::
::::
::::::

## What's going on?

:::::::: columns
::: {.column width="50%"}
-   But wait... didn't we start by noting that men were way more likely to be admitted than women?

-   The first two departments (A and B) are easy to get into

-   The following table shows for each gender, the proportion of applicants each department received.
:::

:::::: {.column width="50%"}
::: fragment
```{r}
admissions |>
  count(Gender, Dept) |>
  group_by(Gender) |>
  mutate(prop_apply = n /sum(n)) |>
  ungroup() |>
  arrange(Gender, Dept) |>
  select(-n) |>
  kableExtra::kable(digits = 2)|>
  kableExtra::kable_styling(font_size = 20)
```
:::

:::: fragment
::: discuss
What do you notice?
:::
::::
::::::
::::::::

## Simpson's paradox

The UC Berkeley admissions observational study is an example of **Simpson's paradox**: when omitting one explanatory variable causes the measure/degree of association between another explanatory variable and a response variable to reverse or disappear

-   In other words, the inclusion/exclusion of a third variable in the analysis can change the apparent relationship between the other two variables
-   What was the confounding variable in UC Berkeley study?

::::::: columns
:::: {.column width="50%"}
::: fragment
```{r}
df <- tribble(
  ~x1, ~y, ~x2,
  2,   4,  0,
  3,   3,  0,
  4,   2,  0,
  5,   1,  0,
  6,   11, 1,
  7,   10, 1,
  8,   9,  1,
  9,   8,  1
)
ggplot() +
  geom_point(data = df, aes(x1, y), size = 5) +
  geom_smooth(data = df, aes(x1, y), lwd = 3, method = lm, se = FALSE, 
              color = "black", linetype = "dashed") +
  theme(text = element_text(size = 20))
```
:::
::::

:::: {.column width="50%"}
::: fragment
```{r  echo=FALSE, message=FALSE}
ggplot() +
  geom_point(data = df, aes(x1, y, color = factor(x2)), size = 5) +
  geom_smooth(data = df, aes(x1, y, color = factor(x2)), method = lm,
              lwd = 2.75) +
  geom_smooth(data = df, aes(x1, y), method = lm, se = FALSE, 
              color = "black", linetype = "dashed", lwd = 3) +
  labs(color = "x2")+
  theme(text = element_text(size = 20))
```
:::
::::
:::::::

## Misc. live code

```{r message= F, echo = T}
library(readr)
url_file <- "https://raw.githubusercontent.com/midd-stat201-fall2024/midd-stat201-fall2024.github.io/main/live_code/data/insurance.csv"
insurance <- read_csv(url_file)
```

We will return to `insurance` data to learn about:

-   Using wrangling to obtain probabilities

-   `case_when()` to create more complex categorical variables

## Wrangling for probabilities

:::::: columns
::: {.column width="50%"}
What is probability that someone is a smoker?

```{r eval = T, echo = T}
insurance |>
  count(smoker) |>
  mutate(prob = n/sum(n)) |>
  select(-n)
```
:::

:::: {.column width="50%"}
::: fragment
What is the probability that someone is a smoker, conditioned on sex?

```{r eval = T, echo = T}
insurance |>
  count(smoker, sex) |>
  group_by(sex) |>
  mutate(prob = n/sum(n)) |>
  select(-n)
```
:::
::::
::::::

## More complex categorical variables

Suppose I want to create a new variable representing the categories of BMI, constructed as follows:

-   underweight if someone's BMI is less than 18.5
-   healthy if BMI is 18.5 to less than 25
-   overweight if BMI is 25 to less than 30
-   obese if BMI is 30 or greater

::: fragment
```{r eval = F, echo = T}
# option 1 (awful): nested if_else()
insurance |>
  mutate(bmi_cat = if_else(bmi < 18.5, "under",
                           if_else(bmi >= 18.5 & bmi < 25, "healthy",
                                   if_else(...))))
```
:::

## case_when()

We will use the `case_when()` function which generalizes `if_else()`. We use the following notation: `<logical condition> ~ <value of variable>`. Different "ifs" are separated by commas, and the logical conditions are checked sequentially.

::::: columns
::: {.column width="50%"}
```{r echo = T, eval = T}
insurance |>
  mutate(bmi_cat = case_when(
    bmi < 18.5 ~ "under",
    bmi >= 18.5 & bmi < 25 ~ "healthy",
    bmi >= 25 & bmi < 30 ~ "over",
    bmi >= 30 ~ "obese"
  )) |>
  select(bmi, bmi_cat) |>
  slice(1:5)
```
:::

::: {.column width="50%"}
```{r echo = T, eval = T}
#| code-line-numbers: "1,2,8"
# The following is also acceptable, but 
# relies on sequential ordering:
insurance |>
  mutate(bmi_cat = case_when(
    bmi < 18.5 ~ "under",
    bmi >= 18.5 & bmi < 25 ~ "healthy",
    bmi >= 25 & bmi < 30 ~ "over",
    T ~ "obese" 
  )) |>
  select(bmi, bmi_cat) |>
  slice(1:5)
```
:::
:::::
